#! /usr/bin/bash -ex
echo "Running sg-ssh-tunnel postinst in $(pwd)"
MISC=/opt/sensorgnome/ssh-tunnel # would be nice to derive that from some env var...

# need to make openssh accept dsa keys
if ! egrep -q 'PubkeyAcceptedKeyTypes.*ssh-dss' /etc/ssh/ssh_config; then
  echo "Host sensorgnome.org *.sensorgnome.org" >> /etc/ssh/ssh_config
  echo "  PubkeyAcceptedKeyTypes +ssh-dss" >> /etc/ssh/ssh_config
fi

# enable and start/restart units
for U in ssh-tunnel; do
    # code from debhelper's postinst-systemd-enable template
    if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
        # This will only remove masks created by d-s-h on package removal.
        deb-systemd-helper unmask $U >/dev/null || true

        # was-enabled defaults to true, so new installations run enable.
        if deb-systemd-helper --quiet was-enabled $U; then
            # Enables the unit on first installation, creates new
            # symlinks on upgrades if the unit file has changed.
            deb-systemd-helper enable $U.service || true
        else
            # Update the statefile to add new symlinks (if any), which need to be
            # cleaned up on purge. Also remove old symlinks.
            deb-systemd-helper update-state $U >/dev/null || true
        fi
    fi
done
