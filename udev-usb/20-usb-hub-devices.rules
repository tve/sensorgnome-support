# Copyright 2012-2017 john brzustowski (sensorgnome.org)
# Portions Copyright 2012-2013 Osmocom rtl-sdr project
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Detect devices attached to the USB hub or directly to the beaglebone.
# We need to know which USB port each device is in, so we can
# label data streams appropriately.
# (e.g. assign a physical antenna or microphone ID to each audio stream)
#
# USB Hub:
#   create symlink in /dev/usb_hub_port_nums.txt to a file giving the map
#   between usb device path and port number.  Only works for hubs we've
#   created these files for.
#
# Disk drives:
#   mount under /media/disk.port=X.name=Y
#   make alias at /dev/sensorgnome/disk.port=X.name=Y
#
# GPS:
#   make alias at /dev/sensorgnome/gps.port=X
#
# Audio device (e.g. funcube)
#   make alias at /dev/sensorgnome/DDD.port=X.alsaDev=Y.usbPath=Z
#   where DDD is one of:
#    funcubePro
#    funcubeProPlus
#    usbAudio
#
# RTLSDR dvb dongle
#   make alias at /dev/sensorgnome/rtlsdr.port=X.usbPath=Z
#
# Heavily modified from Arch linux file media-by-label-auto-mount.rules

# uncomment the following block for debug info
ACTION=="add",RUN{program}+="/usr/bin/logger -t sensorgnome Checking %p"
#ACTION=="add",RUN{program}+="/usr/bin/logger -t sensorgnome Add %p %E{SUBSYSTEM} k=%k %M/%m %s{idVendor}:%s{idProduct}"
#ACTION=="remove",RUN{program}+="/usr/bin/logger -t sensorgnome Remove %p %k %M %m %s{busnum} %s{devnum} %s{idVendor}:%s{idProduct}"
#ACTION=="change",RUN{program}+="/usr/bin/logger -t sensorgnome Change %p %k"

ACTION=="add",GOTO="main"

# if physically removing a USB device, remove the link to it in /dev/sensorgnome via the portnum symlink in /dev/sensorgnome/usb
# we do this so that if libusb detaches kernel drivers from a device, that by itself doesn't remove the link in /dev/sensorgnome
# (e.g. for rtlsdr dongles).  Note that we don't maintain symlinks in /dev/sensorgnome/usb to secondary USB hubs, so
# the test for ENV{DELETED}=="1" below fails for them, which is desired because removal of a secondary USB hub needs
# to change the port mapping rules (for port 4 of the Pi HUB).

#ACTION=="remove",ENV{MAJOR}=="189",IMPORT{program}="/usr/bin/awk -f /home/pi/proj/sensorgnome/scripts/get_usb_device_port_number.awk %p",PROGRAM="/home/pi/proj/sensorgnome/scripts/rmlinkandtarget.sh /dev/sensorgnome/usb/%E{PORT_NUM}",GOTO="done"
ACTION=="remove",GOTO="main"
ACTION=="change",GOTO="main"

SUBSYSTEM!="usb",GOTO="not_usb_hub"

## detect USB hubs
LABEL="main"
#KERNEL!="1-1",GOTO="secondary_usb_hub"
KERNEL!="1-1",GOTO="not_usb_hub"

ACTION=="add",ENV{ID_VENDOR_ID}=="1a40",ENV{ID_MODEL_ID}=="0201",GOTO="GWC_HU2SA0R"
ACTION=="add",ENV{ID_VENDOR_ID}=="05e3",ENV{ID_MODEL_ID}=="0610",GOTO="DLINK_DUBH7"
ACTION=="add",ENV{ID_VENDOR_ID}=="0835",ENV{ID_MODEL_ID}=="8500",GOTO="DLINK_DUBH7_C1"
ACTION=="add",ENV{ID_VENDOR_ID}=="050d",ENV{ID_MODEL_ID}=="0416",GOTO="STAPLES_BELKIN"
ACTION!="remove",GOTO="done"
IMPORT{program}="/bin/rm -f /dev/usb_hub_port_nums.txt"
GOTO="done"

LABEL="GWC_HU2SA0R"
#IMPORT{program}="/bin/rm -f /dev/usb_hub_port_nums.txt /dev/primary_usb_hub_port_nums.txt"
#IMPORT{program}="/bin/ln -s /home/pi/proj/sensorgnome/udev-rules/hub_GWC_HU2SA0R_portnums.txt /dev/usb_hub_port_nums.txt"
GOTO="done"

LABEL="DLINK_DUBH7"
#IMPORT{program}="/bin/rm -f /dev/usb_hub_port_nums.txt /dev/primary_usb_hub_port_nums.txt"
#IMPORT{program}="/bin/ln -s /home/pi/proj/sensorgnome/udev-rules/hub_DLINK_DUBH7_portnums.txt /dev/usb_hub_port_nums.txt"
GOTO="done"

LABEL="DLINK_DUBH7_C1"
#IMPORT{program}="/bin/rm -f /dev/usb_hub_port_nums.txt /dev/primary_usb_hub_port_nums.txt"
#IMPORT{program}="/bin/ln -s /home/pi/proj/sensorgnome/udev-rules/hub_DLINK_DUBH7_C1_portnums.txt /dev/usb_hub_port_nums.txt"
GOTO="done"

LABEL="STAPLES_BELKIN"
#IMPORT{program}="/bin/rm -f /dev/usb_hub_port_nums.txt /dev/primary_usb_hub_port_nums.txt"
#IMPORT{program}="/bin/ln -s /home/pi/proj/sensorgnome/udev-rules/hub_STAPLES_BELKIN_portnums.txt /dev/usb_hub_port_nums.txt"
GOTO="done"

####################  END OF HUB DETECTION #######################
LABEL="not_usb_hub"
###################  START OF DISK DETECTION #####################

KERNEL!="sd[a-z][0-9]",KERNEL!="sd[a-z]",GOTO="not_disk"
ACTION!="add", GOTO="not_add_disk"
# don't try to mount the root device itself
KERNEL!="sd[a-z][0-9]",GOTO="done"
IMPORT{program}="/sbin/blkid -o udev -p %N"
IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"

# Disk: import FS info
ENV{mount_dir}="disk_port%E{PORT_NUM}-%n"
ENV{disk_name}="disk.port=%E{PORT_NUM}.name=%k.mount=%E{mount_dir}"
# Global mount options
ENV{mount_options}="defaults,noatime,users"
# Filesystem-specific mount options
ENV{ID_FS_TYPE}=="vfat",ENV{mount_options}="%E{mount_options},gid=100,umask=002,utf8,flush"
ENV{ID_FS_TYPE}=="ext4",ENV{mount_options}="%E{mount_options},group,users,suid"
ENV{ID_FS_TYPE}=="ntfs",ENV{mount_options}="%E{mount_options},gid=100,umask=002,utf8 -tntfs-3g"
SYMLINK+="sensorgnome/%E{disk_name}"

# Mount the device
MODE:="0666"
ENV{PORT_NUM}!="",RUN+="/usr/bin/mkdir -p /media/%E{mount_dir}",
ENV{PORT_NUM}!="",RUN+="/usr/bin/mount -o %E{mount_options} /dev/%k /media/%E{mount_dir}"
ENV{PORT_NUM}!="",RUN+="/usr/bin/logger -t sensorgnome Mounted /dev/%k on /media/%E{mount_dir} options %E{mount_options}"
GOTO="done"

LABEL="not_add_disk"
# Clean up after removal
ACTION!="remove",GOTO="done"
IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"
ENV{mount_dirs}="disk_port%E{PORT_NUM}*"
ENV{PORT_NUM}!="",RUN+="/bin/sh -c 'for DEV in /media/%E{mount_dirs}; do umount -l $DEV; rmdir $DEV; done'"
GOTO="done"

###################  END OF DISK DETECTION #####################
LABEL="not_disk"
################# START OTHER DEVICE DETECTION #################

## detect funcube dongles
ACTION=="add",SUBSYSTEMS=="usb",ATTRS{idVendor}=="04d8",ATTRS{idProduct}=="fb56",ENV{MYDEVNAME}="funcubePro",GOTO="usbaudio"
ACTION=="add",SUBSYSTEMS=="usb",ATTRS{idVendor}=="04d8",ATTRS{idProduct}=="fb31",ENV{MYDEVNAME}="funcubeProPlus",GOTO="usbaudio"

## detect Cornell tag XCVR / CTT LifeTag MOTUS Adapter
ACTION=="add",SUBSYSTEM=="tty",ATTRS{idVendor}=="0403",ATTRS{idProduct}=="6001",ENV{MYDEVNAME}="CornellTagXCVR",GOTO="CornellTagXCVR"
ACTION=="add",SUBSYSTEM=="tty",ATTRS{idVendor}=="0403",ATTRS{idProduct}=="6010",ENV{MYDEVNAME}="CornellTagXCVR",GOTO="CornellTagXCVR"
# CTT Motus Adapter v1 with integrated CP2102 serial adapter and std Vid:Pid (ugh!)
ACTION=="add",SUBSYSTEM=="tty",ATTRS{idVendor}=="10c4",ATTRS{idProduct}=="ea60",ENV{MYDEVNAME}="CornellTagXCVR",GOTO="CornellTagXCVR"
# CTT Motus Adapter v2 made with Adafruit Feather #3077 using std Vid:Pid (ugh!)
ACTION=="add",SUBSYSTEM=="tty",ATTRS{idVendor}=="239a",ATTRS{idProduct}=="800c",ENV{MYDEVNAME}="CornellTagXCVR",GOTO="CornellTagXCVR"

## detect RPi serial0 (which we assume is the Adafruit GPS Hat on a Pi3/Pi4)
#ACTION=="add",KERNEL=="serial0",GOTO="adafruit_gps_hat"

## detect PL2303 serial port and assume it's a GPS (FIXME!)
ACTION=="add",SUBSYSTEMS=="usb",ATTRS{idVendor}=="067b",ATTRS{idProduct}=="2303",KERNEL=="tty*",GOTO="pl2303gps"

## detect sensorgnome PPSGPS (with our own custom local VID/PID)
ACTION=="add",SUBSYSTEMS=="usb",ATTRS{idVendor}=="bd09",ATTRS{idProduct}=="0001",GOTO="sg_ppsgps"

## any other sound device is assumed to be USB audio
ACTION=="add",SUBSYSTEMS=="sound",ENV{MYDEVNAME}="usbAudio",GOTO="usbaudio"

## otherwise, see whether it's an rtlsdr dongle
GOTO="rtlsdr"

# Cornell (Gabrielson & Winkler) Tag Transceiver / CTT LifeTag MOTUS Adapter
# line settings: 115200 raw
# FIXME: the adafruit-based tags show up as /dev/ttyACM, not /dev/ttyUSB
LABEL="CornellTagXCVR"
IMPORT{program}="/bin/sh -c '(sleep 2; /bin/stty -F /dev/ttyUSB%n 115200 raw &)'"
IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"
MODE:="0666"
ENV{PORT_NUM}!="",SYMLINK+="sensorgnome/CornellTagXCVR.port=%E{PORT_NUM}.port_path=%E{PORT_PATH}"
ENV{PORT_NUM}!="",RUN{program}+="/usr/bin/logger -t sensorgnome Added CornellTagXCVR %E{PORT_PATH}->port %E{PORT_NUM}"
GOTO="done"

# adafruit GPS hat for Pi
#LABEL="adafruit_gps_hat"
#SYMLINK+="gps%n"
#SYMLINK+="sensorgnome/gps.port=0.pps=1.kind=hat"
#RUN{program}+="/usr/bin/logger -t sensorgnome Added GPS HAT"
#TAG+="systemd"
#ENV{SYSTEMD_WANTS}="gpsdctl@%k.service"
#GOTO="done"

# pl2303gps serial port: add a link indicating which port the device is in
LABEL="pl2303gps"
# because the device node hasn't been set up yet, we need to run the
IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"
MODE:="0666"
ENV{PORT_NUM}!="",SYMLINK+="sensorgnome/gps.port=%E{PORT_NUM}.pps=0.port_path=%E{PORT_PATH}"
ENV{PORT_NUM}!="",RUN{program}+="/usr/bin/logger -t sensorgnome Added GPS %E{PORT_PATH}->port %E{PORT_NUM}"
GOTO="done"

# sensorgnome PPSGPS: a US Globalsat MR350P serial GPS interfaced via an FTDI EVAL232R board,
# with PPS signal going directly to GPIO pin 48 (= pin 15 on jumper P9)
LABEL="sg_ppsgps"
IMPORT{program}="/sbin/modprobe ftdi_sio product=0x0001 vendor=0xbd09"
# FIXME: we'd like to use /dev/ttyUSB%n in the following, but %n won't be defined since it is
# not until after modprobe ftdi_sio that the kernel even knows this is a serial device!
IMPORT{program}="/bin/stty -F /dev/ttyUSB0 4800"
IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"

MODE:="0666"
ENV{PORT_NUM}!="",SYMLINK+="sensorgnome/gps.port=%E{PORT_NUM}.pps=1.port_path=%E{PORT_PATH}"
ENV{PORT_NUM}!="",RUN{program}+="/usr/bin/logger -t sensorgnome Added GPS %E{PORT_PATH}->port %E{PORT_NUM}"
GOTO="done"

# any usb audio device
LABEL="usbaudio"
MODE:="0666"
DRIVERS=="usb",KERNEL=="controlC[0-9]",IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"
DRIVERS=="usb",KERNEL=="controlC[0-9]",SYMLINK+="sensorgnome/%E{MYDEVNAME}.port=%E{PORT_NUM}.alsaDev=%n.usbPath=%s{busnum}:%s{devnum}.port_path=%E{PORT_PATH}"
ENV{PORT_NUM}!="",RUN{program}+="/usr/bin/logger -t sensorgnome Added %E{MYDEVNAME} %E{PORT_PATH}->port %E{PORT_NUM}"
GOTO="done"

LABEL="rtlsdr"

################# START RTLSDR DETECTION #################
# original RTL2832U vid/pid (hama nano, for example)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2832",GOTO="rtlsdr2"

# RTL2832U OEM vid/pid, e.g. ezcap EzTV668 (E4000), Newsky TV28T (E4000/R820T) etc
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2838",GOTO="rtlsdr2"

# DigitalNow Quad DVB-T PCI-E card (4x FC0012?)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0413", ATTRS{idProduct}=="6680",GOTO="rtlsdr2"

# Leadtek WinFast DTV Dongle mini D (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0413", ATTRS{idProduct}=="6f0f",GOTO="rtlsdr2"

# Genius TVGo DVB-T03 USB dongle (Ver. B)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0458", ATTRS{idProduct}=="707f",GOTO="rtlsdr2"

# Terratec Cinergy T Stick Black (rev 1) (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00a9",GOTO="rtlsdr2"

# Terratec NOXON rev 1 (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00b3",GOTO="rtlsdr2"

# Terratec Deutschlandradio DAB Stick (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00b4",GOTO="rtlsdr2"

# Terratec NOXON DAB Stick - Radio Energy (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00b5",GOTO="rtlsdr2"

# Terratec Media Broadcast DAB Stick (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00b7",GOTO="rtlsdr2"

# Terratec BR DAB Stick (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00b8",GOTO="rtlsdr2"

# Terratec WDR DAB Stick (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00b9",GOTO="rtlsdr2"

# Terratec MuellerVerlag DAB Stick (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00c0",GOTO="rtlsdr2"

# Terratec Fraunhofer DAB Stick (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00c6",GOTO="rtlsdr2"

# Terratec Cinergy T Stick RC (Rev.3) (E4000)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00d3",GOTO="rtlsdr2"

# Terratec T Stick PLUS (E4000)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00d7",GOTO="rtlsdr2"

# Terratec NOXON rev 2 (E4000)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="0ccd", ATTRS{idProduct}=="00e0",GOTO="rtlsdr2"

# PixelView PV-DT235U(RN) (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1554", ATTRS{idProduct}=="5020",GOTO="rtlsdr2"

# Astrometa DVB-T/DVB-T2 (R828D)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="15f4", ATTRS{idProduct}=="0131",GOTO="rtlsdr2"

# HanfTek DAB+FM+DVB-T
SUBSYSTEMS=="usb", ATTRS{idVendor}=="15f4", ATTRS{idProduct}=="0133",GOTO="rtlsdr2"

# Compro Videomate U620F (E4000)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="185b", ATTRS{idProduct}=="0620",GOTO="rtlsdr2"

# Compro Videomate U650F (E4000)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="185b", ATTRS{idProduct}=="0650",GOTO="rtlsdr2"

# Compro Videomate U680F (E4000)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="185b", ATTRS{idProduct}=="0680",GOTO="rtlsdr2"

# GIGABYTE GT-U7300 (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d393",GOTO="rtlsdr2"

# DIKOM USB-DVBT HD
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d394",GOTO="rtlsdr2"

# Peak 102569AGPK (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d395",GOTO="rtlsdr2"

# KWorld KW-UB450-T USB DVB-T Pico TV (TUA9001)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d397",GOTO="rtlsdr2"

# Zaapa ZT-MINDVBZP (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d398",GOTO="rtlsdr2"

# SVEON STV20 DVB-T USB & FM (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d39d",GOTO="rtlsdr2"

# Twintech UT-40 (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d3a4",GOTO="rtlsdr2"

# ASUS U3100MINI_PLUS_V2 (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d3a8",GOTO="rtlsdr2"

# SVEON STV27 DVB-T USB & FM (FC0013)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d3af",GOTO="rtlsdr2"

# SVEON STV21 DVB-T USB & FM
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1b80", ATTRS{idProduct}=="d3b0",GOTO="rtlsdr2"

# Dexatek DK DVB-T Dongle (Logilink VG0002A) (FC2580)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1d19", ATTRS{idProduct}=="1101",GOTO="rtlsdr2"

# Dexatek DK DVB-T Dongle (MSI DigiVox mini II V3.0)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1d19", ATTRS{idProduct}=="1102",GOTO="rtlsdr2"

# Dexatek DK 5217 DVB-T Dongle (FC2580)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1d19", ATTRS{idProduct}=="1103",GOTO="rtlsdr2"

# MSI DigiVox Micro HD (FC2580)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1d19", ATTRS{idProduct}=="1104",GOTO="rtlsdr2"

# Sweex DVB-T USB (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1f4d", ATTRS{idProduct}=="a803",GOTO="rtlsdr2"

# GTek T803 (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1f4d", ATTRS{idProduct}=="b803",GOTO="rtlsdr2"

# Lifeview LV5TDeluxe (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1f4d", ATTRS{idProduct}=="c803",GOTO="rtlsdr2"

# MyGica TD312 (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1f4d", ATTRS{idProduct}=="d286",GOTO="rtlsdr2"

# PROlectrix DV107669 (FC0012)
SUBSYSTEMS=="usb", ATTRS{idVendor}=="1f4d", ATTRS{idProduct}=="d803",GOTO="rtlsdr2"

GOTO="done"

LABEL="rtlsdr2"
ACTION=="remove",GOTO="done"
LABEL="add_rtlsdr"
MODE:="0666"
## record the usb bus path e.g. 1-1.2
IMPORT{program}="/opt/sensorgnome/udev-usb/get-usb-port.py %p"
## get the sg device name, encoding some properties
ENV{sgname}="/dev/sensorgnome/rtlsdr.port=%E{PORT_NUM}.usbPath=%s{busnum}:%s{devnum}.vidpid=%s{idVendor}:%s{idProduct}.mfg=%s{manufacturer}.prod=%s{product}.port_path=%E{PORT_PATH}"
## Touch a file in /dev/sensorgnome, rather than using SYMLINK+=
## because we look after deletion ourselves (see rule for ACTION=="remove" near top of file)
## To support physical removal of device, we create symlinks to /dev/sensorgnome/*.port=N.* from /dev/sensorgnome/usb/N,
## and then delete both ends of the link upon a plain "usb" device removal, which doesn't
## happen unless the device is physically removed.

ENV{MAJOR}=="189",IMPORT{program}="/bin/mkdir -p /dev/sensorgnome/usb",IMPORT{program}="/bin/touch %E{sgname}",IMPORT{program}="/bin/sh -c '/bin/ln -s %E{sgname} /dev/sensorgnome/usb/%E{PORT_NUM}'"
ENV{MAJOR}=="189",RUN{program}+="/usr/bin/logger -t sensorgnome Added rtlsdr %E{PORT_PATH}->port %E{PORT_NUM}"
GOTO="done"

LABEL="done"

# Exit
